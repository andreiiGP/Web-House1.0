# -*- coding: utf-8 -*-
"""Laoratorio 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPrLPvKKEI92m6ebtSgCgGJFpqS3D8V8

Primer punto
"""

from random import *
n = 4 #se le da el tamaño a la matriz en las filas 
m = 4  #se le da el tamaño a la martiz en las columnas 
m =[[randint(0,9) for J in range(m)] for I in range(n)] # se le da un ciclo 
for f in m: # condicional
    print( f)  # se imprime la martiz
    x= m[0][0]+m[0][1]+m[0][2]+m[0][3]+m[1][0]+m[1][1]+m[1][2]+m[1][3]+m[2][0]+m[2][1]+m[2][2]+m[2][3]+m[3][0]+m[3][1]+m[3][2]+m[3][3] # es la operacion de suma de la martiz
print("el resultado de la suma de la matriz es: ",x)
print("-")
b= int(input("ingrese la fila que desea sumar (las fila van desde [0.3])"))     # se le pide al usuario la columna que desea sumar
if b==0:                                                                              # condicional para saber si escoge el numero  siga con la operacion
  x0= m[0][0]+m[0][1]+m[0][2]+m[0][3]                                                 # se hace la suma 
  print("el resultado de la suma de la fila 0 es: ",x0)                            # se le entrega el resultado al usuario 
if b==1:
  x1= m[1][0]+m[1][1]+m[1][2]+m[1][3]
  print("el resultado de la suma de la fila 1 es: ",x1)
if b==2:
  x2= m[2][0]+m[2][1]+m[2][2]+m[2][3]
  print("el resultadode de la suma de la fila 2 es: ",x2)
if b==3:
  x3= m[3][0]+m[3][1]+m[3][2]+m[3][3]
  print("el resultadode de la suma de la fila 3 es: ",x3)
print("-")
c= int(input("ingrese la columna la cual desea sumar (las columna van desde [0.3])"))      #se le pide al usuario la fila que desea sumar
if c==0:                                                                              #condicional para saber si escoge el numero  siga con la operacion
  y0= m[0][0]+m[1][0]+m[2][0]+m[3][0]                                                 # se hace la suma 
  print("el resultado de la suma de la columna 0 es: ",y0)                               # se le entrega el resultado al usuario 
if c==1:
  y1= m[0][1]+m[1][1]+m[2][1]+m[3][1]
  print("el resultado de la suma de la columna 1 es:",y1)
if c==2:
  y2= m[0][2]+m[1][2]+m[2][2]+m[3][2]
  print("el resultado de la suma de la columna 2 es:",y2)
if c==3:
  y3= m[0][3]+m[1][3]+m[2][3]+m[3][3]
  print("el resultado de la suma de la columna 3 es:",y3)
print("-")
if x>= 0 :   # se le pone una condicion (lo que cumple ) 
  print("la matriz contiene al menos un cero (true)")
else:        # condicion (lo que no se cumple )
  print("la martiz no contine un cero (false)")
print("-")

"""Segundo punto"""

X = [[1,1,1],   #Ingresamos una matriz 
    [1,1,1],
    [1,1,1]]

Y = [[1,1],     #Ingresamos la matriz a multiplicar
    [1,1],
    [1,1]]

result = [[0,0],   #variable 
         [0,0],
         [0,0]]


for i in range(len(X)):    #se agrega condicionales 
   
   for j in range(len(Y[0])):
       
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]  #operacion para hallar el producto de las dos matrices ingresadas

for r in result:
   print(r) #s imprime el resultado

"""Tercer punto"""

A=[[0,-1,3,2,0,0,3,4,-2],
    [1,2,-1,1,2,3,1,0,1],
    [2,3,0,-1,0,2,2,-2,3],
    [3,2,2,2,-1,3,2,1,4],
    [4,0,1,3,0,-1,-2,3,2],
    [5,1,2,2,1,-2,-1,2,1],
    [6,1,2,-2,2,3,2,-1,2],
    [7,-2,1,0,3,2,0,4,-1]]
Afil=[-1,3,2,0,0,3,4,-2,2,-1,1,2,3,1,0,1,3,0,-1,0,2,2,-2,3,2,2,2,-1,3,2,1,4,0,1,3,0,-1,-2,3,2,1,2,2,1,-2,-1,2,1,1,2,-2,2,3,2,-1,2,-2,1,0,3,2,0,4,-1] 
print(A)
Asuma=sum(Afil)
print(Asuma)
au=len(Afil)

"""Cuarto punto"""

#a)
import numpy as np #importamos la libreia numpy
A=np.array([[3,4],[-2,-3]]) #ingresamos los terminos de (a)
print(A) #Se imprime

B=np.array([[-2],[-3]]) #Ingresamos los terminos de (b)
print(B)

np.linalg.inv(A)*(B) #hallamos la inversa de (a) y la multiplicamos por (b)

#b)
import numpy as np #importamos la libreia numpy
A=np.array([[3,4,0,0],[1,4,1,0],[0,1,4,1],[0,0,1,3]]) #ingresamos los terminos de (a)
print(A)

B=np.array([[15],[10],[10],[10]]) #Ingresamos los terminos de (b)
print(B)

np.linalg.inv(A)*(B) #hallamos la inversa de (a) y la multiplicamos por (b)

